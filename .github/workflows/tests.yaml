name: Tests
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Check version match
        run: |
          PACKAGE_VERSION=$(uvx --from=toml-cli toml get --toml-path=pyproject.toml project.version)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Package version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi

      - name: Install dependencies
        run: uv sync

      - name: Run unit tests
        env:
          GRIDSTATUS_API_KEY_TEST: ${{ secrets.GRIDSTATUS_API_KEY_TEST }}
        run: |
          make test
